/*
 * Autor: Marta Márquez Olalla

ejercicio creado para explicar los siguientes conceptos;
- Hilos de ejecución paralela.
- Arraylist.
 */
package codigo;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import javax.swing.Timer;

/**
 *
 * @author Thomas
 */
public class VentanaJuego extends javax.swing.JFrame {
    //Vamos a declarar dos constantes. Las constantes se ponen en mayúsculas.
    static int ANCHOPANTALLA=600;
    static int ALTOPANTALLA=450;
    
    BufferedImage buffer=null;
    int contador=0;
    //Declaramos la nave.
    Nave miNave = new Nave();
    
    //bucle de animación del juego. En este caso es un hilo de ejecución nuevo que se encarga de refrescar el contenido de la pantalla.
    Timer temporizador= new Timer(10, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            //Código de la animación. Llamamos a un método.
            bucleDelJuego();
        }
    });
    //10 son los milisegundos que va a tardar en ejecutarse la siguiente vez.
    //El ActionListener está en busca de cambios. Si encuentra un cambio modifica la pantalla.
    
    public VentanaJuego() {
        initComponents();
        setSize(ANCHOPANTALLA,ALTOPANTALLA );
        buffer=(BufferedImage) jPanel1.createImage(ANCHOPANTALLA,ALTOPANTALLA);
        buffer.createGraphics();
        //Inicializamos la nave. Las x y las y son las que hemos declarado en la clase Nave.
        miNave.x=ANCHOPANTALLA/2-miNave.imagen.getWidth(this)/2;
        miNave.y=ALTOPANTALLA-miNave.imagen.getHeight(this)-40;
        
        //Hay que inicializar el temporizador.
        temporizador.start();
        
    }
    
    private void bucleDelJuego(){
        //El bucle de animación gobierna el redibujado de los objetos en el jPanel1.
        Graphics2D g2= (Graphics2D) buffer.getGraphics();
        g2.setColor(Color.black);
        g2.fillRect(0,0,ANCHOPANTALLA,ALTOPANTALLA);
        /////////////////////////////////////////////////////////////////////////
           //redibujamos cada elemento en su nueva posición en el buffer.
        
        ////////////////////////////////////////////////////////////////////////
        
        //Dibujo de golpe el buffer sobre el jPanel1.
        g2=(Graphics2D) jPanel1.getGraphics();
        g2.drawImage(buffer, 0,0, null);
        //contador++;
        //Llamamos a la función de movimiento en la clase Nave.
        miNave.mueve();
        //Pinto la nave.
        g2.drawImage(miNave.imagen,miNave.x,miNave.y, null);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 756, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 532, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        //Cada una de las teclas tiene un código. VK_LEFT/RIGHT son las flechas de movimiento.
        switch(evt.getKeyCode()){
            case KeyEvent.VK_LEFT : miNave.setPulsadoIzquierda(true); break;
            case KeyEvent.VK_RIGHT : miNave.setPulsadoDerecha(true); break;
        }
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        switch(evt.getKeyCode()){
            case KeyEvent.VK_LEFT : miNave.setPulsadoIzquierda(false); break;
            case KeyEvent.VK_RIGHT : miNave.setPulsadoDerecha(false); break;
        }
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaJuego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
